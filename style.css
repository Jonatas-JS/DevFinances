/* =========== Global =========== */
:root {
  --color-dark-blue: #363F5F; /* criou uma variável */
}
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  font-size: 93.75%;
}

body {
  background: #F0F2F5;
  font-family: 'Poppins', sans-serif;
}

/* =========== cabeçalho =========== */
header {
  background: #2D4A22;
  padding: 2rem 0 10rem;
  text-align: center;
}

#logo {
  color: #FFF;
  font-weight: normal;
}

/* =========== corpo =========== */
.container {
  width: min(90vw, 800px); /* ocupe 90% da vw ou 800px */
  margin: auto;
}

h2 {
  color: var(--color-dark-blue);
  font-weight: 700;
}

.balance-title {
  color: white;
  margin-top: -7rem;
  margin-bottom: .8rem;
}

/* =========== balances=>cards =========== */
.card {
  background: white;
  padding: 1.5rem 2rem; /* espaço de preenchimento */
  border-radius: 0.25rem; /* bordas com cantos aredondados */
  margin-bottom: 2rem; /* margem de baixo */
  color: var(--color-dark-blue);
}

.card h3 {
  font-weight: normal;
  font-size: 1rem;

  display: flex; /* um ao lado do outro */
  align-items: center; /* centralizar no eixo X */
  justify-content: space-between; /* ajustar espaço entre eles */
}

.card p {
  font-size: 2rem;
  line-height: 3rem; /* espaçamento entre lihas caso haja quebra de linha */
  margin-top: 1rem;
}

.card.total {
  background: #49AA26;
  color: white;
}

/* =========== button-function =========== */
a {
  color: #49AA26;
  text-decoration: none;
}
a:hover {
  color: #3DD705;
}
.button.new {
  /* declarei como class="button new" no HTML => quando vou dar atributos a elas colocando juntas (.button.new{}) 
  estou dizendo, busque uma classe declarada junta "button new".
  => quando vou dar atribustos a elas separadas (.button .new{}) estou dizendo, procure uma classe "new" que está
  dentro de uma classe "button". */
  display: inline-block; /* 'inline'=>são dados atributos apenas ao tamanho da caixa, mas, não funciona o margin-bottom
'block'=>preenche/ocupa toda a linha, mas funciona o margin-bottom */
  margin-bottom: .8rem;
}

/* =========== table =========== */
#data-table {
  display: block;
  width: 100%;
  color: #969CB3;
  border-spacing: 0 0.5rem; /* largura-da-borda-vertical | largura-da-borda-horizontal */
  overflow-x: auto;
}

table thead th {
  background: white;
  padding: 1rem 2rem;
  text-align: center;
}

table tbody td {
  background: white;
  padding: 1rem 1.5rem;
}
table tbody tr td:nth-child(2),
table tbody tr td:nth-child(3) {
  text-align: center;
}

table thead tr th:first-child, 
table tbody tr td:first-child {
  border-radius: 0.25rem 0 0 0.25rem;
}

table thead tr th:last-child, 
table tbody tr td:last-child {
  border-radius: 0 0.25rem 0.25rem 0;
}

table tbody tr {
  opacity: 0.58;
}

table tbody tr:hover { /* houver=>quando passar o mouse */
  opacity: 1;
}

td.description {
  color: var(--color-dark-blue);
}
td.income {
  color: #12A454;
}
td.expense {
  color: #E92929;
}

/* =========== modal =========== */
.modal-overlay {
  width: 100%;
  height: 100%;
  background-color: rgba(0,0,0,.7);
  backdrop-filter: blur(1px);
  position: fixed;
  top: 0;
  display: flex;
  align-items: center;
  justify-content: center;
}
.modal {
  background: #F0F2F5;
  padding: 2.4rem;
}

/* =========== rodapé =========== */
footer {
  color: var(--color-dark-blue);
  text-align: center;
  padding: 4rem 0 2rem;
  opacity: 0.58;
}

/* =========== responsive =========== */
@media (min-width: 800px) {
  html {
    font-size: 87.5%;
  }
  #balance {
    display: grid;
    grid-template-columns: repeat(3, 1fr); /* fr=fração | tbm posso usar 1fr 1fr 1fr */
    gap: 2rem;
  }
}
@media (min-width: 554px) {
  #transactions {
    width: 100%;
  }
  #data-table {
    width: 100%;
    display: inline-table;
  }
}